// Code generated by go-swagger; DO NOT EDIT.

package logging

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"github.com/ysomad/go-project-structure/internal/gen/server/model"
)

// GetLogLevelOKCode is the HTTP code returned for type GetLogLevelOK
const GetLogLevelOKCode int = 200

/*
GetLogLevelOK OK

swagger:response getLogLevelOK
*/
type GetLogLevelOK struct {

	/*
	  In: Body
	*/
	Payload *model.LogLevel `json:"body,omitempty"`
}

// NewGetLogLevelOK creates GetLogLevelOK with default headers values
func NewGetLogLevelOK() *GetLogLevelOK {

	return &GetLogLevelOK{}
}

// WithPayload adds the payload to the get log level o k response
func (o *GetLogLevelOK) WithPayload(payload *model.LogLevel) *GetLogLevelOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get log level o k response
func (o *GetLogLevelOK) SetPayload(payload *model.LogLevel) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetLogLevelOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetLogLevelOK) GetLogLevelResponder() {}

type GetLogLevelNotImplementedResponder struct {
	middleware.Responder
}

func (*GetLogLevelNotImplementedResponder) GetLogLevelResponder() {}

func GetLogLevelNotImplemented() GetLogLevelResponder {
	return &GetLogLevelNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.GetLogLevel has not yet been implemented",
		),
	}
}

type GetLogLevelResponder interface {
	middleware.Responder
	GetLogLevelResponder()
}
